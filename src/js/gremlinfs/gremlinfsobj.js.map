{"version": 3, "mappings": "AAOA,kBAAA;IAEI,uBAAA;QAMI,IAAAA,OAAA,CAAYC,MAAZ;IANJ;IAQA;IAAA;IAGA,gBAA0B,EAA1B,WAAuC,IAAvC;;oBACoBC;QAAhB,SAAA,GAAA,SAAA;;gBACIC,QAAQD,MAAA,CAAOE,GAAP;gBACR,IAAAC,IAAA,CAASD,GAAT,EAAcD,KAAd,EAAqBG,MAArB;;QAFJ;IADJ;IAKA,gBAA0B,IAA1B;IAAA;IAGA,aAAuB,IAAvB;QACI,OAAO,IAAAC,OAAA,CAAYD,MAAZ;IADX;IAGA,cAAwB,IAAxB;QACI,OAAO,IAAAC,OAAA,CAAYD,MAAZ,CAAAE,KAAA;IADX;IAGA,kBAA4B,IAA5B;QACI,IAAGF,MAAH;YACIF,MAAmB,CAAb,CAAAE,MAAA,EAAA,CAAS,GAAT,CAAa,EAAA,CAAEF,GAAF;QADvB;QAEA,IAAG,CAAc,CAAA,GAAA,EAAA,CAAMA,GAAN,CAAd,GAAA,CAAQ,IAAR,CAAH;YACI,OAAO;QADX;QAEA,OAAO;IALX;IAOA,yBAAmC,IAAnC;QACI,IAAG,CAAAA,GAAA,IAAA,CAAO,WAAP,CAAH;YACI,IAAGE,MAAH;gBACIF,MAAmB,CAAb,CAAAE,MAAA,EAAA,CAAS,GAAT,CAAa,EAAA,CAAEF,GAAF;YADvB;YAEQ,KAAM,CAAA,GAAA,EAAA,CAAMA,GAAN,KAAWD;QAH7B;IADJ;IAMA,qBAA+B,IAA/B,WAA8C,IAA9C;;QACI,IAAG,EAAA,CAAI,IAAAM,IAAA,CAASL,GAAT,EAAcE,MAAd,CAAJ,CAAH;YACI,OAAOI;QADX;QAEA,IAAGJ,MAAH;YACIF,MAAmB,CAAb,CAAAE,MAAA,EAAA,CAAS,GAAT,CAAa,EAAA,CAAEF,GAAF;QADvB;QAEAD,QAAQ,CAAQ,KAAM,CAAA,GAAA,EAAA,CAAMC,GAAN,EAAd,GAAA,CAAyBM,SAAzB;QACR,OAAOP;IANX;AAxCJ;AAkDA,mBAAA;IAEI,uBAAA;QACI,IAAAQ,SAAa;IADjB;IAGA;QACI,OAAW,IAAAA,eAAJ;IADX;IAGA;QACI,IAAAA,SAAaC;IADjB;IAGA;QACI,OAAO,IAAAD;IADX;IAGA;QACI,IAAAA,MAAAE,OAAA,CAAkBC,IAAlB;QACA,OAAO,IAAAH;IAFX;IAIA;QACI,IAAAA,MAAAI,OAAA,CAAkBH,IAAlB;QACA,OAAO,IAAAD;IAFX;AAlBJ;AAwBA,kBAAA,SAAmBK,YAAnB;IAEI,uBAAA;aAII;QAEA,IAAAhB,OAAA,CAAYC,MAAZ;IANJ;IAQA;QACI,OAAW,aAAJ;IADX;IAGA;QACI,IAAAD,OAAA,CAAYiB,GAAZ;IADJ;IAGA;QACI,OAAO,IAAAV,OAAA;IADX;IAGA;QACI,IAAAP,OAAA,CAAYiB,GAAZ;IADJ;AAnBJ;AAwBA,wBAAmB,EAAnB;;IACIC,UAAU,IAAAC,aAAA;IACVD,OAAAE,SAAA,CAAiBR,IAAjB;IACA,OAAOM;AAHX;AAOA,sBAAiB,EAAjB;;IACIG,SAAS,IAAAC,YAAA;IACTD,MAAAE,QAAA,CAAeN,GAAf;IACA,OAAOI;AAHX;AAOA;AAOA", "sources": ["../../py/gremlinfs/gremlinfsobj.py"], "names": ["this.setall", "kwargs", "_dict_", "value", "key", "this.set", "prefix", "this.getall", "this.getall(prefix).keys", "this.has", "_default_", "this._list", "list", "this._list.append", "item", "this._list.extend", "GremlinFSObj", "map", "gfslist", "GremlinFSList", "gfslist.fromlist", "gfsmap", "GremlinFSMap", "gfsmap.frommap"], "sourcesContent": ["# \n# Copyright (c) 2019, John Grundback\n# All rights reserved.\n# \n\n\n\nclass GremlinFSObj():\n\n    def __init__(self, **kwargs):\n\n        # JS jump:\n        # ReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor\n        # super().__init__()\n\n        self.setall(kwargs);\n\n    def fromobj(self, obj):\n        pass\n\n    def setall(self, _dict_ = {}, prefix = None):\n        for key in dict(_dict_):\n            value = _dict_[key] # .get(key, None)\n            self.set(key, value, prefix)\n\n    def getall(self, prefix = None):\n        pass\n\n    def all(self, prefix = None):\n        return self.getall(prefix)\n\n    def keys(self, prefix = None):\n        return self.getall(prefix).keys()\n\n    def has(self, key, prefix = None):\n        if prefix:\n            key = prefix + \".\" + key\n        if hasattr(self, \"_\" + key):\n            return True\n        return False\n\n    def set(self, key, value, prefix = None):\n        if key != \"__class__\":\n            if prefix:\n                key = prefix + \".\" + key\n            setattr(self, \"_\" + key, value)\n\n    def get(self, key, _default_ = None, prefix = None):\n        if not self.has(key, prefix):\n            return _default_\n        if prefix:\n            key = prefix + \".\" + key\n        value = getattr(self, \"_\" + key, _default_)\n        return value\n\n\n\nclass GremlinFSList():\n\n    def __init__(self, **kwargs):\n        self._list = []\n\n    def __str__(self):\n        return str(self._list)\n\n    def fromlist(self, list):\n        self._list = list\n\n    def tolist(self):\n        return self._list\n\n    def append(self, item):\n        self._list.append(item)\n        return self._list\n\n    def extend(self, list):\n        self._list.extend(list)\n        return self._list\n\n\n\nclass GremlinFSMap(GremlinFSObj):\n\n    def __init__(self, **kwargs):\n\n        # JS jump:\n        # ReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor\n        super().__init__()\n\n        self.setall(kwargs);\n\n    def __str__(self):\n        return str(self)\n\n    def frommap(self, map):\n        self.setall(map)\n\n    def tomap(self):\n        return self.getall()\n\n    def update(self, map):\n        self.setall(map)\n\n\n\ndef gfslist(list = []):\n    gfslist = GremlinFSList()\n    gfslist.fromlist(list)\n    return gfslist\n\n\n\ndef gfsmap(map = {}):\n    gfsmap = GremlinFSMap()\n    gfsmap.frommap(map)\n    return gfsmap\n\n\n\n__all__ = [\n    'GremlinFSObj',\n    'GremlinFSList',\n    'gfslist',\n    'gfsmap'\n]\n\n__default__ = 'GremlinFSObj'\n"]}